/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form_Presentation;

import DatabaseAccessObject_DAO.HoaDonDAO;
import DatabaseAccessObject_DAO.KhachHangDAO;
import DatabaseAccessObject_DAO.NhomKhachHangDAO;
import Object_BusinessLogic.KhachHang;
import Object_BusinessLogic.NhomKhachHang;
import java.awt.Component;
import java.sql.SQLException;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FormKhachHang extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmNhomKhachHang
     */
    public FormKhachHang() throws ClassNotFoundException, SQLException {
        initComponents();
        loadDuLieuLenBang();
        loadCombobox_NhomKhachHang();
        cbb_NhomKH.setSelectedItem(null);
        loadCombobox_NhomKhachHang_Search();
        cbb_Search_NhomKH.setSelectedItem(null);
        lbl_DiemTichLuy_Hint.setVisible(false);
        lbl_sdt_Hint.setVisible(false);
        lbl_sdt_Search_Hint.setVisible(false);
        lbl_SoCMND_Hint.setVisible(false);
    }

    private void loadDuLieuLenBang() throws ClassNotFoundException, SQLException {
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Customer ID");
        tableModel.addColumn("Customer Name");
        tableModel.addColumn("ID Number");
        tableModel.addColumn("Gender");
        tableModel.addColumn("Phone Number");
        tableModel.addColumn("Email");
        tableModel.addColumn("Address");
        tableModel.addColumn("Customer Type ID");
        tableModel.addColumn("Customer Type Name");
        tableModel.addColumn("Bonus Score");
        KhachHangDAO khachHangDAO = new KhachHangDAO();
        //lấy ra toàn bộ vai trò
        List<KhachHang> khachHangList = khachHangDAO.selectAll();
        for (KhachHang kh : khachHangList) {
            Vector vector = new Vector();
            vector.add(kh.getMaKH());
            vector.add(kh.getHoTenKH());
            vector.add(kh.getSoCMND());
            vector.add(kh.getGioiTinh().equals("Nam") ? "Nam" : "Nữ");
            vector.add(kh.getSdt());
            vector.add(kh.getEmail());
            vector.add(kh.getDiachi());
            vector.add(kh.getMaNhomKH());
            vector.add(kh.getTenNhomKH());
            vector.add(kh.getDiemTichLuy());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_KhachHang.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgGioiTinh = new javax.swing.ButtonGroup();
        bg_Search_gioiTinh = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_MaKH = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        txt_TenKH = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbb_NhomKH = new javax.swing.JComboBox();
        txt_DiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_SDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_Email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rbnNam = new javax.swing.JRadioButton();
        rbnNu = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        txt_SoCMND = new javax.swing.JTextField();
        txt_DiemTichLuy = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_Search_TenKH = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_Search_sdt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbb_Search_NhomKH = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        rbn_SearchNam = new javax.swing.JRadioButton();
        rbn_SearchNu = new javax.swing.JRadioButton();
        btn_Search_Clear = new javax.swing.JButton();
        lbl_sdt_Search_Hint = new javax.swing.JLabel();
        btn_refresh_cbb_NKH_Search = new javax.swing.JButton();
        lbl_DiemTichLuy_Hint = new javax.swing.JLabel();
        lbl_sdt_Hint = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbl_SoCMND_Hint = new javax.swing.JLabel();
        btn_refresh_cbb_NKH = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_KhachHang = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        btn_ListKH = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Customer ID*");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 30, 110, 17);

        txt_MaKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_MaKH);
        txt_MaKH.setBounds(172, 27, 260, 30);

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btnSua.setText("Update");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(369, 350, 120, 43);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/user-add-icon.png"))); // NOI18N
        btnThem.setText("Add");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(209, 350, 120, 43);

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/trash-icon.png"))); // NOI18N
        btnXoa.setText("Delete");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(528, 350, 120, 43);

        btnXoaTrang.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btnXoaTrang.setText("Clear");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoaTrang);
        btnXoaTrang.setBounds(688, 350, 120, 43);

        txt_TenKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_TenKH);
        txt_TenKH.setBounds(172, 72, 260, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Customer Name*");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 75, 110, 17);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Customer Type*");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(460, 80, 123, 17);

        cbb_NhomKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_NhomKH.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbb_NhomKH);
        cbb_NhomKH.setBounds(620, 70, 161, 34);

        txt_DiaChi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_DiaChi);
        txt_DiaChi.setBounds(172, 295, 260, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Address");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 298, 50, 17);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Gender*");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(460, 30, 70, 22);

        txt_SDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_SDT);
        txt_SDT.setBounds(172, 178, 260, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Phone Number*");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 183, 110, 17);

        txt_Email.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_Email);
        txt_Email.setBounds(172, 240, 260, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Email");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(40, 243, 60, 17);

        bgGioiTinh.add(rbnNam);
        rbnNam.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rbnNam.setText("Male");
        jPanel1.add(rbnNam);
        rbnNam.setBounds(620, 20, 63, 39);

        bgGioiTinh.add(rbnNu);
        rbnNu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rbnNu.setText("Female");
        jPanel1.add(rbnNu);
        rbnNu.setBounds(700, 20, 80, 41);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("ID Number*");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(40, 123, 120, 17);

        txt_SoCMND.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_SoCMND);
        txt_SoCMND.setBounds(172, 120, 260, 30);

        txt_DiemTichLuy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_DiemTichLuy);
        txt_DiemTichLuy.setBounds(620, 120, 160, 30);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Bonus Score*");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(460, 130, 100, 17);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search"));
        jPanel3.setForeground(new java.awt.Color(0, 204, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Customer Name");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 19, -1, -1));

        txt_Search_TenKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel3.add(txt_Search_TenKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 16, 236, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Phone Number");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 70, 107, -1));

        txt_Search_sdt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel3.add(txt_Search_sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 64, 236, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("Gender");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 148, 60, 22));

        cbb_Search_NhomKH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_Search_NhomKH.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(cbb_Search_NhomKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 185, 181, 34));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Customer Type");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 194, 123, -1));

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search-b-icon.png"))); // NOI18N
        btnTimKiem.setText("Search");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, -1, 43));

        bg_Search_gioiTinh.add(rbn_SearchNam);
        rbn_SearchNam.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rbn_SearchNam.setText("Male");
        jPanel3.add(rbn_SearchNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 141, 61, 37));

        bg_Search_gioiTinh.add(rbn_SearchNu);
        rbn_SearchNu.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rbn_SearchNu.setText("Female");
        jPanel3.add(rbn_SearchNu, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 141, 82, 37));

        btn_Search_Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_Search_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btn_Search_Clear.setText("Clear");
        btn_Search_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Search_ClearActionPerformed(evt);
            }
        });
        jPanel3.add(btn_Search_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 112, 43));

        lbl_sdt_Search_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_sdt_Search_Hint.setForeground(new java.awt.Color(204, 0, 0));
        lbl_sdt_Search_Hint.setText("  Invalid!");
        jPanel3.add(lbl_sdt_Search_Hint, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 100, 100, 20));

        btn_refresh_cbb_NKH_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btn_refresh_cbb_NKH_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_cbb_NKH_SearchActionPerformed(evt);
            }
        });
        jPanel3.add(btn_refresh_cbb_NKH_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 183, 42, 38));

        jPanel1.add(jPanel3);
        jPanel3.setBounds(860, 60, 390, 310);

        lbl_DiemTichLuy_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_DiemTichLuy_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_DiemTichLuy_Hint.setText("  Invalid!");
        jPanel1.add(lbl_DiemTichLuy_Hint);
        lbl_DiemTichLuy_Hint.setBounds(620, 150, 100, 20);

        lbl_sdt_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_sdt_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_sdt_Hint.setText("  Invalid!");
        jPanel1.add(lbl_sdt_Hint);
        lbl_sdt_Hint.setBounds(170, 210, 210, 20);

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("(*) required fields");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(40, 360, 113, 26);

        lbl_SoCMND_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_SoCMND_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_SoCMND_Hint.setText("  Invalid!");
        jPanel1.add(lbl_SoCMND_Hint);
        lbl_SoCMND_Hint.setBounds(170, 150, 100, 20);

        btn_refresh_cbb_NKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btn_refresh_cbb_NKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_cbb_NKHActionPerformed(evt);
            }
        });
        jPanel1.add(btn_refresh_cbb_NKH);
        btn_refresh_cbb_NKH.setBounds(790, 68, 42, 38);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/11111.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(6, 20, 1260, 398);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Customer List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        tab_KhachHang.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab_KhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_KhachHang.getTableHeader().setReorderingAllowed(false);
        tab_KhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_KhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab_KhachHang);
        if (tab_KhachHang.getColumnModel().getColumnCount() > 0) {
            tab_KhachHang.getColumnModel().getColumn(0).setResizable(false);
            tab_KhachHang.getColumnModel().getColumn(1).setResizable(false);
            tab_KhachHang.getColumnModel().getColumn(2).setResizable(false);
            tab_KhachHang.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );

        btn_ListKH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_ListKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-view-calendar-list-icon.png"))); // NOI18N
        btn_ListKH.setText("List");
        btn_ListKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_ListKH, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ListKH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab_KhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_KhachHangMouseClicked
        lbl_SoCMND_Hint.setVisible(false);
        lbl_sdt_Hint.setVisible(false);
        lbl_DiemTichLuy_Hint.setVisible(false);
        int row = tab_KhachHang.getSelectedRow();
        String maKhachHang = (String) tab_KhachHang.getValueAt(row, 0);
        String tenKH = (String) tab_KhachHang.getValueAt(row, 1);
        Integer soCMND = (Integer) tab_KhachHang.getValueAt(row, 2);
        String gioiTinh = (String) tab_KhachHang.getValueAt(row, 3);
        Integer sdt = (Integer) tab_KhachHang.getValueAt(row, 4);
        String email = (String) tab_KhachHang.getValueAt(row, 5);
        String diaChi = (String) tab_KhachHang.getValueAt(row, 6);
        Integer maNhomKH = (Integer) tab_KhachHang.getValueAt(row, 7);
        Integer diemTichLuy = (Integer) tab_KhachHang.getValueAt(row, 9);
        txt_MaKH.setText(maKhachHang);
        txt_TenKH.setText(tenKH);
        txt_DiaChi.setText(diaChi);
        txt_SoCMND.setText(soCMND.toString());
        txt_DiemTichLuy.setText(diemTichLuy.toString());
        if (gioiTinh.trim().equalsIgnoreCase("Nam")) {
            rbnNam.setSelected(true);
        } else {
            rbnNu.setSelected(true);
        }
        txt_SDT.setText(sdt.toString());
        txt_Email.setText(email);
        NhomKhachHangDAO nhomKH_DAO = new NhomKhachHangDAO();
        cbb_NhomKH.setSelectedItem(nhomKH_DAO.getNhomKHByID(maNhomKH));
        txt_MaKH.setEnabled(false);
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tab_KhachHangMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        xoaTrang();
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Customer ID");
        tableModel.addColumn("Customer Name");
        tableModel.addColumn("ID Number");
        tableModel.addColumn("Gender");
        tableModel.addColumn("Phone Number");
        tableModel.addColumn("Email");
        tableModel.addColumn("Address");
        tableModel.addColumn("Customer Type ID");
        tableModel.addColumn("Customer Type Name");
        tableModel.addColumn("Bonus Score");
        KhachHangDAO khachHangDAO = new KhachHangDAO();
        //lấy ra thông tin tìm kiếm
        KhachHang kh = new KhachHang();
        if (txt_Search_TenKH.getText().trim().equals("") && rbn_SearchNam.isSelected() == false
                && rbn_SearchNu.isSelected() == false && cbb_Search_NhomKH.getSelectedItem() == null
                && txt_Search_sdt.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter information into the search box!");
            lbl_sdt_Search_Hint.setVisible(false);
            return;
        }
        if (!txt_Search_sdt.getText().trim().equals("")) {
            while (true) {
                try {
                    kh.setSdt(Integer.parseInt(txt_Search_sdt.getText().trim()));
                    lbl_sdt_Search_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid !! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_sdt_Search_Hint.setVisible(true);
                    return;
                }
            }
        }

        kh.setHoTenKH(txt_Search_TenKH.getText().trim());
        if (rbn_SearchNam.isSelected()) {
            kh.setGioiTinh("Nam");
        }
        if (rbn_SearchNu.isSelected()) {
            kh.setGioiTinh("Nữ");
        }
        NhomKhachHang nkh = (NhomKhachHang) cbb_Search_NhomKH.getSelectedItem();
        kh.setMaNhomKH(nkh != null ? nkh.getMaNhomKH() : null);
        List<KhachHang> khachHangList = khachHangDAO.search(kh);
        for (KhachHang khachHang : khachHangList) {
            Vector vector = new Vector();
            vector.add(khachHang.getMaKH());
            vector.add(khachHang.getHoTenKH());
            vector.add(khachHang.getSoCMND());
            vector.add(khachHang.getGioiTinh().equals("Nam") ? "Nam" : "Nữ");
            vector.add(khachHang.getSdt());
            vector.add(khachHang.getEmail());
            vector.add(khachHang.getDiachi());
            vector.add(khachHang.getMaNhomKH());
            vector.add(khachHang.getTenNhomKH());
            vector.add(khachHang.getDiemTichLuy());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_KhachHang.setModel(tableModel);
        lbl_sdt_Search_Hint.setVisible(false);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        xoaTrang();
        xoaTrangSearch();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tab_KhachHang.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one customer before deleting!");
            return;
        }
        String maKhachHang = (String) tab_KhachHang.getValueAt(row, 0);
        if (HoaDonDAO.getListMaKhachHang().contains(maKhachHang.trim())) {
            JOptionPane.showMessageDialog(this, "Unable to remove this customer information\n"
                    + "Customer information is being used!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete??", "Warning", OK_CANCEL_OPTION);
        //Nếu chọn Yes
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                KhachHangDAO khachHangDAO = new KhachHangDAO();
                KhachHang kh = new KhachHang(maKhachHang);
                khachHangDAO.delete(kh);
                xoaTrang();
                xoaTrangSearch();
                loadDuLieuLenBang();
                JOptionPane.showMessageDialog(this, "Customer information removed !");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_MaKH.getText().isEmpty() || txt_TenKH.getText().isEmpty() || txt_SoCMND.getText().isEmpty()
                    || (rbnNam.isSelected() == false && rbnNu.isSelected() == false) || txt_SDT.getText().isEmpty()
                    || cbb_NhomKH.getSelectedItem() == null || txt_DiemTichLuy.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                lbl_SoCMND_Hint.setVisible(false);
                lbl_sdt_Hint.setVisible(false);
                lbl_DiemTichLuy_Hint.setVisible(false);
                return;
            }
            // check các trường số phải nhập hợp lệ
            while (true) {
                try {
                    while (true) {
                        try {
                            Integer.parseInt(txt_SoCMND.getText().trim());
                            lbl_SoCMND_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_SoCMND_Hint.setVisible(true);
                            break;
                        }
                    }
                    while (true) {
                        try {
                            Integer.parseInt(txt_SDT.getText().trim());
                            lbl_sdt_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_sdt_Hint.setVisible(true);
                            break;
                        }
                    }
                    while (true) {
                        try {
                            Integer.parseInt(txt_DiemTichLuy.getText().trim());
                            lbl_DiemTichLuy_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_DiemTichLuy_Hint.setVisible(true);
                            break;
                        }
                    }
                    Integer.parseInt(txt_SoCMND.getText().trim());
                    Integer.parseInt(txt_SDT.getText().trim());
                    Integer.parseInt(txt_DiemTichLuy.getText().trim());
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid !! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    return;
                }
            }

            String gtinh = "Nữ";
            if (rbnNam.isSelected()) {
                gtinh = "Nam";
            }
            KhachHangDAO khachHangDAO = new KhachHangDAO();
            if (khachHangDAO.getListMaKhachHang().contains(txt_MaKH.getText().trim().toUpperCase())) {
                JOptionPane.showMessageDialog(this, "Customer ID already exists!\n"
                        + "Re-Enter the customer ID!!");
                txt_MaKH.setText("");
                return;
            }
            //lấy giá trị nhập trên form truyền vào đôi tượng
            KhachHang kh = new KhachHang();
            kh.setMaKH(txt_MaKH.getText().trim().toUpperCase());
            kh.setHoTenKH(txt_TenKH.getText());
            kh.setSoCMND(Integer.parseInt(txt_SoCMND.getText()));
            kh.setDiachi(txt_DiaChi.getText());
            kh.setSdt(Integer.parseInt(txt_SDT.getText()));
            kh.setGioiTinh(gtinh);
            kh.setEmail(txt_Email.getText());
            kh.setMaNhomKH(((NhomKhachHang) cbb_NhomKH.getSelectedItem()).getMaNhomKH());
            kh.setTenNhomKH(((NhomKhachHang) cbb_NhomKH.getSelectedItem()).getTenNhomKH());
            kh.setDiemTichLuy(Integer.parseInt(txt_DiemTichLuy.getText()));
            //thực hiện thêm vào DB
            khachHangDAO.insert(kh);

            //reset form
            xoaTrang();
            xoaTrangSearch();
            //load lại dữ liệu lên lưới
            loadDuLieuLenBang();
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Successfully add new customer !");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tab_KhachHang.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one customer before updating!");
            return;
        }
        xoaTrangSearch();
        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_TenKH.getText().isEmpty() || txt_SoCMND.getText().isEmpty()
                    || (rbnNam.isSelected() == false && rbnNu.isSelected() == false) || txt_SDT.getText().isEmpty()
                    || cbb_NhomKH.getSelectedItem() == null || txt_DiemTichLuy.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                lbl_SoCMND_Hint.setVisible(false);
                lbl_sdt_Hint.setVisible(false);
                lbl_DiemTichLuy_Hint.setVisible(false);
                return;
            }
            while (true) {
                try {
                    while (true) {
                        try {
                            Integer.parseInt(txt_SoCMND.getText().trim());
                            lbl_SoCMND_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_SoCMND_Hint.setVisible(true);
                            break;
                        }
                    }
                    while (true) {
                        try {
                            Integer.parseInt(txt_SDT.getText().trim());
                            lbl_sdt_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_sdt_Hint.setVisible(true);
                            break;
                        }
                    }
                    while (true) {
                        try {
                            Integer.parseInt(txt_DiemTichLuy.getText().trim());
                            lbl_DiemTichLuy_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_DiemTichLuy_Hint.setVisible(true);
                            break;
                        }
                    }
                    Integer.parseInt(txt_SoCMND.getText().trim());
                    Integer.parseInt(txt_SDT.getText().trim());
                    Integer.parseInt(txt_DiemTichLuy.getText().trim());
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid !! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    return;
                }
            }
            if (soSanh(row)) {
                JOptionPane.showMessageDialog(this, "All of the informations are retainded!!");
                return;
            }
            String gtinh = "Nữ";
            if (rbnNam.isSelected()) {
                gtinh = "Nam";
            }
            KhachHangDAO khachHangDAO = new KhachHangDAO();
            //lấy giá trị nhập trên form truyền vào đôi tượng
            KhachHang khachHang = new KhachHang();
            khachHang.setMaKH(txt_MaKH.getText());
            khachHang.setHoTenKH(txt_TenKH.getText());
            khachHang.setSoCMND(Integer.parseInt(txt_SoCMND.getText()));
            khachHang.setDiachi(txt_DiaChi.getText());
            khachHang.setGioiTinh(gtinh);
            khachHang.setSdt(Integer.parseInt(txt_SDT.getText().trim()));
            khachHang.setEmail(txt_Email.getText());
            khachHang.setMaNhomKH(((NhomKhachHang) cbb_NhomKH.getSelectedItem()).getMaNhomKH());
            khachHang.setTenNhomKH(((NhomKhachHang) cbb_NhomKH.getSelectedItem()).getTenNhomKH());
            khachHang.setDiemTichLuy(Integer.parseInt(txt_DiemTichLuy.getText()));
            //thực hiện thêm vào DB
            khachHangDAO.update(khachHang);
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Customer information updated successfully !");
            //reset form
            xoaTrang();
            //load lại dữ liệu lên lưới
            loadDuLieuLenBang();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btn_Search_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Search_ClearActionPerformed
        // TODO add your handling code here:
        xoaTrangSearch();
    }//GEN-LAST:event_btn_Search_ClearActionPerformed

    private void btn_ListKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListKHActionPerformed
        try {
            // TODO add your handling code here:
            loadDuLieuLenBang();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ListKHActionPerformed

    private void btn_refresh_cbb_NKH_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_cbb_NKH_SearchActionPerformed
        // TODO add your handling code here:
         Object obj = cbb_Search_NhomKH.getSelectedItem();
        loadCombobox_NhomKhachHang_Search();
        cbb_Search_NhomKH.setSelectedItem(obj);
    }//GEN-LAST:event_btn_refresh_cbb_NKH_SearchActionPerformed

    private void btn_refresh_cbb_NKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_cbb_NKHActionPerformed
        // TODO add your handling code here:
        Object obj = cbb_NhomKH.getSelectedItem();
        loadCombobox_NhomKhachHang();
        cbb_NhomKH.setSelectedItem(obj);
    }//GEN-LAST:event_btn_refresh_cbb_NKHActionPerformed

    private void xoaTrang() {
        txt_MaKH.setText("");
        txt_MaKH.setEnabled(true);
        txt_TenKH.setText("");
        txt_DiaChi.setText("");
        cbb_NhomKH.setSelectedItem(null);
        txt_SDT.setText("");
        txt_Email.setText("");
        txt_DiemTichLuy.setText("");
        txt_SoCMND.setText("");
        bgGioiTinh.clearSelection();
        btnThem.setEnabled(true);
        tab_KhachHang.clearSelection();
        lbl_SoCMND_Hint.setVisible(false);
        lbl_sdt_Hint.setVisible(false);
        lbl_DiemTichLuy_Hint.setVisible(false);
    }

    private void xoaTrangSearch() {
        txt_Search_TenKH.setText("");
        txt_Search_sdt.setText("");
        bg_Search_gioiTinh.clearSelection();
        cbb_Search_NhomKH.setSelectedItem(null);
        lbl_sdt_Search_Hint.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and dikhlay the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormKhachHang().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FormKhachHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgGioiTinh;
    private javax.swing.ButtonGroup bg_Search_gioiTinh;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btn_ListKH;
    private javax.swing.JButton btn_Search_Clear;
    private javax.swing.JButton btn_refresh_cbb_NKH;
    private javax.swing.JButton btn_refresh_cbb_NKH_Search;
    private javax.swing.JComboBox cbb_NhomKH;
    private javax.swing.JComboBox cbb_Search_NhomKH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_DiemTichLuy_Hint;
    private javax.swing.JLabel lbl_SoCMND_Hint;
    private javax.swing.JLabel lbl_sdt_Hint;
    private javax.swing.JLabel lbl_sdt_Search_Hint;
    private javax.swing.JRadioButton rbnNam;
    private javax.swing.JRadioButton rbnNu;
    private javax.swing.JRadioButton rbn_SearchNam;
    private javax.swing.JRadioButton rbn_SearchNu;
    private javax.swing.JTable tab_KhachHang;
    private javax.swing.JTextField txt_DiaChi;
    private javax.swing.JTextField txt_DiemTichLuy;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_MaKH;
    private javax.swing.JTextField txt_SDT;
    private javax.swing.JTextField txt_Search_TenKH;
    private javax.swing.JTextField txt_Search_sdt;
    private javax.swing.JTextField txt_SoCMND;
    private javax.swing.JTextField txt_TenKH;
    // End of variables declaration//GEN-END:variables

    private void loadCombobox_NhomKhachHang() {
        NhomKhachHangDAO nhomKhachHangDAO = new NhomKhachHangDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<NhomKhachHang> NccList = nhomKhachHangDAO.selectAll();
        Vector v = new Vector(NccList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_NhomKH.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_NhomKH.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhomKhachHang) value).getTenNhomKH());
                }
                return label;
            }
        });
    }

    private void loadCombobox_NhomKhachHang_Search() {
        NhomKhachHangDAO nhomKhachHangDAO = new NhomKhachHangDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<NhomKhachHang> NccList = nhomKhachHangDAO.selectAll();
        Vector v = new Vector(NccList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_Search_NhomKH.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_Search_NhomKH.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhomKhachHang) value).getTenNhomKH());
                }
                return label;
            }
        });
    }

    public boolean soSanh(int row) {
        String maKhachHang = (String) tab_KhachHang.getValueAt(row, 0);
        KhachHang kh = (new KhachHangDAO()).getKHByID(maKhachHang);
        String tenKH = txt_TenKH.getText().trim();
        Integer soCMND = txt_SoCMND.getText().trim().equals(kh.getSoCMND().toString())
                ? Integer.parseInt(txt_SoCMND.getText().trim()) : (new Random()).nextInt();
        String gioiTinh = !rbnNam.isSelected() ? "Nữ" : "Nam";
        Integer sdt = txt_SDT.getText().trim().equals(kh.getSdt().toString())
                ? Integer.parseInt(txt_SDT.getText().trim()) : (new Random()).nextInt();
        String email = txt_Email.getText().trim();
        String diaChi = txt_DiaChi.getText().trim();
        Integer maNhomKH = ((NhomKhachHang) cbb_NhomKH.getSelectedItem()).getMaNhomKH();
        Integer diemTichLuy = txt_DiemTichLuy.getText().trim().equals(kh.getDiemTichLuy().toString())
                ? Integer.parseInt(txt_DiemTichLuy.getText().trim()) : (new Random()).nextInt();
        if (kh.getHoTenKH().equals(tenKH) && kh.getSoCMND().equals(soCMND) && kh.getGioiTinh().equals(gioiTinh)
                && kh.getSdt().equals(sdt) && kh.getEmail().equals(email) && kh.getDiachi().equals(diaChi)
                && kh.getMaNhomKH().equals(maNhomKH) && kh.getDiemTichLuy().equals(diemTichLuy)) {
            return true;
        }
        return false;
    }
}
