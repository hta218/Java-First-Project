/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form_Presentation;

import DatabaseAccessObject_DAO.KhoDAO;
import DatabaseAccessObject_DAO.NhanVienDAO;
import DatabaseAccessObject_DAO.SanPhamDAO;
import DatabaseAccessObject_DAO.TonKhoDAO;
import Object_BusinessLogic.Kho;
import Object_BusinessLogic.NhanVien;
import Object_BusinessLogic.SanPham;
import Object_BusinessLogic.TonKho;
import java.awt.Component;
import java.sql.SQLException;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FormKho extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmNhomKhachHang
     */
    public FormKho() throws ClassNotFoundException, SQLException {
        initComponents();
        loadDataIntoTable_Kho();
        loadCombobox_NhanVien();
        cbb_NhanVien.setSelectedItem(null);
        loadCombobox_NhanVien_Search();
        cbb_Search_NhanVien.setSelectedItem(null);
        loadCombobox_SanPham();
        cbb_SanPham.setSelectedItem(null);
        lbl_soKho_Hint.setVisible(false);
        lbl_sdt_Hint.setVisible(false);
        lbl_soKho_Search_Hint.setVisible(false);
        lbl_sdt_Search_Hint.setVisible(false);
    }

    private void loadDataIntoTable_Kho() throws ClassNotFoundException, SQLException {
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Warehouse Number");
        tableModel.addColumn("Warehouse Name");
        tableModel.addColumn("Phone Number");
        tableModel.addColumn("Manager ID");
        tableModel.addColumn("Manager Name");
        tableModel.addColumn("Address");
        KhoDAO khoDAO = new KhoDAO();
        //lấy ra toàn bộ vai trò
        List<Kho> khoList = khoDAO.selectAll();
        for (Kho kh : khoList) {
            Vector vector = new Vector();
            vector.add(kh.getSoKho());
            vector.add(kh.getTenKho());
            vector.add(kh.getSdt());
            vector.add(kh.getMaNhanVien());
            vector.add(kh.getTenNhanVien());
            vector.add(kh.getDiaChi());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_Kho.setModel(tableModel);
    }

    private void loadDataIntoTable_SanPham() throws ClassNotFoundException, SQLException {
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Product ID");
        tableModel.addColumn("Product Name");
        tableModel.addColumn("Product Type");
        tableModel.addColumn("Quantity");
        TonKhoDAO tonKhoDAO = new TonKhoDAO();
        //lấy ra toàn bộ vai trò
        Integer soKho = (Integer) tab_Kho.getValueAt(tab_Kho.getSelectedRow(), 0);
        List<TonKho> tonKhoList = tonKhoDAO.selectAll(soKho);
        for (TonKho tonKho : tonKhoList) {
            Vector vector = new Vector();
            vector.add(tonKho.getMaSanPham());
            vector.add(tonKho.getTenSanPham());
            vector.add(tonKho.getTenLoaiSanPham());
            vector.add(tonKho.getSoLuong());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_sanPham.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_SoKho = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        txt_TenKho = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbb_NhanVien = new javax.swing.JComboBox();
        txt_DiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_SDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_Search_TenKho = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_Search_soKho = new javax.swing.JTextField();
        cbb_Search_NhanVien = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        btn_Search_Clear = new javax.swing.JButton();
        lbl_soKho_Search_Hint = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_Search_sdt = new javax.swing.JTextField();
        lbl_sdt_Search_Hint = new javax.swing.JLabel();
        lbl_soKho_Hint = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbl_sdt_Hint = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab_sanPham = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        cbb_SanPham = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        txt_SoLuongSanPham = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        btn_ThemSP = new javax.swing.JButton();
        btn_BotSanPham = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_Kho = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        btn_ListKH = new javax.swing.JButton();
        btn_refresh_cbb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Warehouse Number*");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 30, 130, 17);

        txt_SoKho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_SoKho);
        txt_SoKho.setBounds(170, 27, 210, 30);

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btnSua.setText("Update");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(369, 350, 120, 43);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Sign-Add-icon.png"))); // NOI18N
        btnThem.setText("Add");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(209, 350, 120, 43);

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/trash-icon.png"))); // NOI18N
        btnXoa.setText("Delete");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(528, 350, 120, 43);

        btnXoaTrang.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btnXoaTrang.setText("Clear");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoaTrang);
        btnXoaTrang.setBounds(688, 350, 120, 43);

        txt_TenKho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_TenKho);
        txt_TenKho.setBounds(170, 96, 210, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Warehouse Name*");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 100, 140, 17);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Manger*");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 231, 123, 17);

        cbb_NhanVien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_NhanVien.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbb_NhanVien);
        cbb_NhanVien.setBounds(170, 225, 210, 30);

        txt_DiaChi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_DiaChi);
        txt_DiaChi.setBounds(170, 290, 690, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Address");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 290, 70, 17);

        txt_SDT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_SDT);
        txt_SDT.setBounds(170, 150, 210, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Phone Number*");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 155, 130, 17);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search"));
        jPanel3.setForeground(new java.awt.Color(0, 204, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Warehouse Name");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 97, -1, -1));

        txt_Search_TenKho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel3.add(txt_Search_TenKho, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 220, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Warehouse Number");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 37, 124, -1));

        txt_Search_soKho.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel3.add(txt_Search_soKho, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 220, 30));

        cbb_Search_NhanVien.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_Search_NhanVien.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(cbb_Search_NhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 220, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Manger");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 217, 123, -1));

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search-b-icon.png"))); // NOI18N
        btnTimKiem.setText("Search");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, -1, 43));

        btn_Search_Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_Search_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btn_Search_Clear.setText("Clear");
        btn_Search_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Search_ClearActionPerformed(evt);
            }
        });
        jPanel3.add(btn_Search_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 112, 43));

        lbl_soKho_Search_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_soKho_Search_Hint.setForeground(new java.awt.Color(204, 0, 0));
        lbl_soKho_Search_Hint.setText("  Invalid!");
        jPanel3.add(lbl_soKho_Search_Hint, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 100, 20));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("Phone Number");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 147, 124, -1));

        txt_Search_sdt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel3.add(txt_Search_sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 220, 30));

        lbl_sdt_Search_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_sdt_Search_Hint.setForeground(new java.awt.Color(204, 0, 0));
        lbl_sdt_Search_Hint.setText("  Invalid!");
        jPanel3.add(lbl_sdt_Search_Hint, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 172, 100, 20));

        jPanel1.add(jPanel3);
        jPanel3.setBounds(880, 20, 380, 350);

        lbl_soKho_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_soKho_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_soKho_Hint.setText("  Invalid!");
        jPanel1.add(lbl_soKho_Hint);
        lbl_soKho_Hint.setBounds(170, 60, 120, 20);

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("(*) required fields");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(40, 360, 113, 26);

        lbl_sdt_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_sdt_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_sdt_Hint.setText("  Invalid!");
        jPanel1.add(lbl_sdt_Hint);
        lbl_sdt_Hint.setBounds(170, 190, 120, 20);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Product"));

        tab_sanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tab_sanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tab_sanPham);

        cbb_SanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_SanPham.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_SanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_SanPhamActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("Product:");

        txt_SoLuongSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel19.setText("Number:");

        btn_ThemSP.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_ThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Sign-Add-icon.png"))); // NOI18N
        btn_ThemSP.setText("Add");
        btn_ThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemSPActionPerformed(evt);
            }
        });

        btn_BotSanPham.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_BotSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-remove-icon.png"))); // NOI18N
        btn_BotSanPham.setText("Remove");
        btn_BotSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BotSanPhamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbb_SanPham, 0, 170, Short.MAX_VALUE)
                    .addComponent(txt_SoLuongSanPham))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_BotSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ThemSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_SanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(btn_ThemSP))
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txt_SoLuongSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_BotSanPham))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(400, 20, 460, 260);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/11111.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(6, 19, 1260, 402);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Warehouse List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        tab_Kho.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab_Kho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_Kho.getTableHeader().setReorderingAllowed(false);
        tab_Kho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_KhoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab_Kho);
        if (tab_Kho.getColumnModel().getColumnCount() > 0) {
            tab_Kho.getColumnModel().getColumn(0).setResizable(false);
            tab_Kho.getColumnModel().getColumn(1).setResizable(false);
            tab_Kho.getColumnModel().getColumn(2).setResizable(false);
            tab_Kho.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );

        btn_ListKH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_ListKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-view-calendar-list-icon.png"))); // NOI18N
        btn_ListKH.setText("List");
        btn_ListKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListKHActionPerformed(evt);
            }
        });

        btn_refresh_cbb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btn_refresh_cbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_cbbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_ListKH, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_refresh_cbb, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_ListKH, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(btn_refresh_cbb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab_KhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_KhoMouseClicked
        try {
            loadDataIntoTable_SanPham();
            lbl_sdt_Hint.setVisible(false);
            lbl_soKho_Hint.setVisible(false);
            lbl_sdt_Search_Hint.setVisible(false);
            lbl_soKho_Search_Hint.setVisible(false);
            int row = tab_Kho.getSelectedRow();
            Integer soKho = (Integer) tab_Kho.getValueAt(row, 0);
            String tenKho = (String) tab_Kho.getValueAt(row, 1);
            Integer sdt = (Integer) tab_Kho.getValueAt(row, 2);
            String maNV = (String) tab_Kho.getValueAt(row, 3);
            String diaChi = (String) tab_Kho.getValueAt(row, 5);
            txt_SoKho.setText(soKho.toString());
            txt_TenKho.setText(tenKho);
            txt_SDT.setText(sdt.toString());
            txt_DiaChi.setText(diaChi);
            NhanVienDAO nhanVienDAO = new NhanVienDAO();
            cbb_NhanVien.setSelectedItem(nhanVienDAO.getNVByID(maNV.trim()));
            txt_SoKho.setEnabled(false);
            btnThem.setEnabled(false);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tab_KhoMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        xoaTrang();
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Warehouse Number");
        tableModel.addColumn("Warehouse Name");
        tableModel.addColumn("Phone Number");
        tableModel.addColumn("Manager ID");
        tableModel.addColumn("Manager Name");
        tableModel.addColumn("Address");
        KhoDAO khoDAO = new KhoDAO();
        //lấy ra thông tin tìm kiếm
        Kho kh = new Kho();
        lbl_soKho_Search_Hint.setVisible(false);
        lbl_sdt_Search_Hint.setVisible(false);
        if (txt_Search_TenKho.getText().trim().equals("") && cbb_Search_NhanVien.getSelectedItem() == null
                && txt_Search_soKho.getText().trim().equals("") && txt_Search_sdt.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter information into the search box!");
            lbl_soKho_Search_Hint.setVisible(false);
            lbl_sdt_Search_Hint.setVisible(false);
            return;
        }
        if (!txt_Search_soKho.getText().trim().equals("")) {
            while (true) {
                try {
                    Integer.parseInt(txt_Search_soKho.getText().trim());
                    lbl_soKho_Search_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_soKho_Search_Hint.setVisible(true);
                    return;
                }
            }
        }
        if (!txt_Search_sdt.getText().trim().equals("")) {
            while (true) {
                try {
                    Integer.parseInt(txt_Search_sdt.getText().trim());
                    lbl_sdt_Search_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_sdt_Search_Hint.setVisible(true);
                    return;
                }
            }
        }
        kh.setTenKho(txt_Search_TenKho.getText().trim());
        if (!txt_Search_soKho.getText().trim().equals("")) {
            kh.setSoKho(Integer.parseInt(txt_Search_soKho.getText().trim()));
        }
        if (!txt_Search_sdt.getText().trim().equals("")) {
            kh.setSdt(Integer.parseInt(txt_Search_sdt.getText().trim()));
        }

        NhanVien nv = (NhanVien) cbb_Search_NhanVien.getSelectedItem();
        kh.setMaNhanVien(nv != null ? nv.getMaNhanVien() : null);
        List<Kho> khoList = khoDAO.search(kh);
        for (Kho kho : khoList) {
            Vector vector = new Vector();
            vector.add(kho.getSoKho());
            vector.add(kho.getTenKho());
            vector.add(kho.getSdt());
            vector.add(kho.getMaNhanVien());
            vector.add(kho.getTenNhanVien());
            vector.add(kho.getDiaChi());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_Kho.setModel(tableModel);
        lbl_sdt_Search_Hint.setVisible(false);
        lbl_soKho_Search_Hint.setVisible(false);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        xoaTrang();
        xoaTrangSearch();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tab_Kho.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one Warehouse before deleting !");
            return;
        }
        Integer soKho = (Integer) tab_Kho.getValueAt(row, 0);
        if ((new TonKhoDAO()).getListSoKho().contains(soKho)) {
            JOptionPane.showMessageDialog(this, "Unable to remove this warehouse information\n"
                    + "This warehouse is still containing products!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete??", "Warning", OK_CANCEL_OPTION);
        //Nếu chọn Yes
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                KhoDAO khachHangDAO = new KhoDAO();
                Kho kh = new Kho(soKho);
                khachHangDAO.delete(kh);
                xoaTrang();
                xoaTrangSearch();
                loadDataIntoTable_Kho();
                JOptionPane.showMessageDialog(this, "Warehouse information removed !");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_SoKho.getText().isEmpty() || txt_TenKho.getText().isEmpty() || txt_SDT.getText().isEmpty()
                    || cbb_NhanVien.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                lbl_soKho_Hint.setVisible(false);
                lbl_sdt_Hint.setVisible(false);
                return;
            }

            while (true) {
                try {
                    while (true) {
                        try {
                            Integer.parseInt(txt_SoKho.getText().trim());
                            lbl_soKho_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_soKho_Hint.setVisible(true);
                            break;
                        }
                    }
                    while (true) {
                        try {
                            Integer.parseInt(txt_SDT.getText().trim());
                            lbl_sdt_Hint.setVisible(false);
                            break;
                        } catch (NumberFormatException e) {
                            lbl_sdt_Hint.setVisible(true);
                            break;
                        }
                    }
                    Integer.parseInt(txt_SoKho.getText().trim());
                    Integer.parseInt(txt_SDT.getText().trim());
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    return;
                }
            }

            KhoDAO khoDAO = new KhoDAO();
            if (khoDAO.getListSoKho().contains(Integer.parseInt(txt_SoKho.getText().trim()))) {
                JOptionPane.showMessageDialog(this, "Warehouse Number already exists!\n"
                        + "Re-Enter the Warehouse Number!!");
                txt_SoKho.setText("");
                return;
            }
            //lấy giá trị nhập trên form truyền vào đôi tượng
            Kho kh = new Kho();
            kh.setSoKho(Integer.parseInt(txt_SoKho.getText()));
            kh.setTenKho(txt_TenKho.getText());
            kh.setDiaChi(txt_DiaChi.getText());
            kh.setSdt(Integer.parseInt(txt_SDT.getText()));
            kh.setMaNhanVien(((NhanVien) cbb_NhanVien.getSelectedItem()).getMaNhanVien());
            kh.setTenNhanVien(((NhanVien) cbb_NhanVien.getSelectedItem()).getHoTenNhanVien());
            //thực hiện thêm vào DB
            khoDAO.insert(kh);

            //reset form
            xoaTrang();
            xoaTrangSearch();
            //load lại dữ liệu lên lưới
            loadDataIntoTable_Kho();
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Successfully add new Warehouse !");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tab_Kho.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one customer in the customer list table below before updating!");
            return;
        }

        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_TenKho.getText().isEmpty() || txt_SDT.getText().isEmpty()
                    || cbb_NhanVien.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                lbl_soKho_Hint.setVisible(false);
                lbl_sdt_Hint.setVisible(false);
                return;
            }
            while (true) {
                try {
                    Integer.parseInt(txt_SDT.getText().trim());
                    lbl_sdt_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_sdt_Hint.setVisible(true);
                    return;
                }
            }
            if (soSanh(row)) {
                JOptionPane.showMessageDialog(this, "All of the informations are retainded!!");
                return;
            }
            KhoDAO khoDAO = new KhoDAO();
            //lấy giá trị nhập trên form truyền vào đôi tượng
            Kho kho = new Kho();
            kho.setSoKho(Integer.parseInt(txt_SoKho.getText().trim()));
            kho.setTenKho(txt_TenKho.getText());
            kho.setDiaChi(txt_DiaChi.getText());
            kho.setSdt(Integer.parseInt(txt_SDT.getText().trim()));
            kho.setMaNhanVien(((NhanVien) cbb_NhanVien.getSelectedItem()).getMaNhanVien());
            kho.setTenNhanVien(((NhanVien) cbb_NhanVien.getSelectedItem()).getHoTenNhanVien());
            //thực hiện thêm vào DB
            khoDAO.update(kho);
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Customer information updated successfully !");
            //reset form
            xoaTrang();
            xoaTrangSearch();
            //load lại dữ liệu lên lưới
            loadDataIntoTable_Kho();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btn_Search_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Search_ClearActionPerformed
        // TODO add your handling code here:
        txt_Search_TenKho.setText("");
        txt_Search_soKho.setText("");
        cbb_Search_NhanVien.setSelectedItem(null);
        txt_Search_sdt.setText("");
        lbl_sdt_Search_Hint.setVisible(false);
        lbl_soKho_Search_Hint.setVisible(false);
    }//GEN-LAST:event_btn_Search_ClearActionPerformed

    private void btn_ListKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListKHActionPerformed
        try {
            // TODO add your handling code here:
            loadDataIntoTable_Kho();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ListKHActionPerformed

    private void btn_refresh_cbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_cbbActionPerformed
        // TODO add your handling code here:
        Object obj1 = cbb_NhanVien.getSelectedItem();
        Object obj2 = cbb_Search_NhanVien.getSelectedItem();
        Object obj3 = cbb_SanPham.getSelectedItem();

        loadCombobox_NhanVien();
        cbb_NhanVien.setSelectedItem(obj1);
        loadCombobox_NhanVien_Search();
        cbb_Search_NhanVien.setSelectedItem(obj2);
        loadCombobox_SanPham();
        cbb_SanPham.setSelectedItem(obj3);
    }//GEN-LAST:event_btn_refresh_cbbActionPerformed

    private void btn_ThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemSPActionPerformed
        try {
            // TODO add your handling code here:
            int row = tab_Kho.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Select Warehouse!!");
                return;
            }
            tab_sanPham.clearSelection();
            if (cbb_SanPham.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Select Product!!");
                return;
            }
            Integer soLuongSP;
            while (true) {
                try {
                    soLuongSP = Integer.parseInt(txt_SoLuongSanPham.getText().trim());
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Enter number of product!!");
                    return;
                }
            }
            if (soLuongSP <= 0) {
                JOptionPane.showMessageDialog(this, "Invalid number!!");
                return;
            }
            TonKho tk = new TonKho();
            TonKhoDAO tkDAO = new TonKhoDAO();
            tk.setSoKho(Integer.parseInt(txt_SoKho.getText().trim()));
            String maSanPham = ((SanPham) cbb_SanPham.getSelectedItem()).getMaSanPham().trim();
            tk.setMaSanPham(maSanPham);
            tk.setSoLuong(soLuongSP);
            if (tkDAO.getListMaSanPhamConLai(Integer.parseInt(txt_SoKho.getText().trim())).contains(maSanPham.trim())) {
                tk.setSoLuong(soLuongSP + (new TonKhoDAO()).getSoLuongConLai(tk));
                tkDAO.capNhat(tk);
            } else {
                tkDAO.insert(tk);
            }
            JOptionPane.showMessageDialog(this, "Successfully!!");
            cbb_SanPham.setSelectedItem(null);
            txt_SoLuongSanPham.setText("");
            tab_sanPham.clearSelection();
            loadDataIntoTable_SanPham();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ThemSPActionPerformed

    private void btn_BotSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BotSanPhamActionPerformed
        try {
            // TODO add your handling code here:
            int dong = tab_Kho.getSelectedRow();
            if (dong == -1) {
                JOptionPane.showMessageDialog(this, "Select Warehouse!!");
                return;
            }
            int row = tab_sanPham.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Select Product in Product table!!");
                return;
            }
            cbb_SanPham.setSelectedItem(null);
            Integer soLuongGiam = 0;
            Integer soLuongConLai = (Integer) tab_sanPham.getValueAt(row, 3);
            if (soLuongConLai == 0) {
                int cf = JOptionPane.showConfirmDialog(this, "Are you sure want to remove this product?", "Warnig", OK_CANCEL_OPTION);
                if (cf == YES_OPTION) {
                    (new TonKhoDAO()).delete(Integer.parseInt(txt_SoKho.getText().trim()), (String) tab_sanPham.getValueAt(row, 0));
                    JOptionPane.showMessageDialog(this, "Product removed");
                    loadDataIntoTable_SanPham();
                }
            } else {
                while (true) {
                    try {
                        soLuongGiam = Integer.parseInt(txt_SoLuongSanPham.getText().trim());
                        break;
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Enter number of product!!");
                        return;
                    }
                }
                if (soLuongGiam > soLuongConLai || soLuongGiam <= 0) {
                    JOptionPane.showMessageDialog(this, "Invalid!!");
                    return;
                }
                TonKho tk = new TonKho();
                tk.setSoKho(Integer.parseInt(txt_SoKho.getText().trim()));
                tk.setMaSanPham((String) tab_sanPham.getValueAt(row, 0));
                tk.setSoLuong(soLuongConLai - soLuongGiam);
                (new TonKhoDAO()).capNhat(tk);
                JOptionPane.showMessageDialog(this, "Successfully!!");
                txt_SoLuongSanPham.setText("");
                tab_sanPham.clearSelection();
                loadDataIntoTable_SanPham();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_BotSanPhamActionPerformed

    private void cbb_SanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_SanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbb_SanPhamActionPerformed

    private void xoaTrang() {
        txt_SoKho.setText("");
        txt_SoKho.setEnabled(true);
        txt_TenKho.setText("");
        txt_DiaChi.setText("");
        cbb_NhanVien.setSelectedItem(null);
        txt_SDT.setText("");
        btnThem.setEnabled(true);
        tab_Kho.clearSelection();
        lbl_sdt_Hint.setVisible(false);
        lbl_soKho_Hint.setVisible(false);
        tab_sanPham.setModel(new DefaultTableModel());
    }

    private void xoaTrangSearch() {
        lbl_sdt_Search_Hint.setVisible(false);
        lbl_soKho_Search_Hint.setVisible(false);
        txt_Search_TenKho.setText("");
        txt_Search_soKho.setText("");
        cbb_Search_NhanVien.setSelectedItem(null);
        txt_Search_sdt.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and dikhlay the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormKho().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FormKho.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btn_BotSanPham;
    private javax.swing.JButton btn_ListKH;
    private javax.swing.JButton btn_Search_Clear;
    private javax.swing.JButton btn_ThemSP;
    private javax.swing.JButton btn_refresh_cbb;
    private javax.swing.JComboBox cbb_NhanVien;
    private javax.swing.JComboBox cbb_SanPham;
    private javax.swing.JComboBox cbb_Search_NhanVien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_sdt_Hint;
    private javax.swing.JLabel lbl_sdt_Search_Hint;
    private javax.swing.JLabel lbl_soKho_Hint;
    private javax.swing.JLabel lbl_soKho_Search_Hint;
    private javax.swing.JTable tab_Kho;
    private javax.swing.JTable tab_sanPham;
    private javax.swing.JTextField txt_DiaChi;
    private javax.swing.JTextField txt_SDT;
    private javax.swing.JTextField txt_Search_TenKho;
    private javax.swing.JTextField txt_Search_sdt;
    private javax.swing.JTextField txt_Search_soKho;
    private javax.swing.JTextField txt_SoKho;
    private javax.swing.JTextField txt_SoLuongSanPham;
    private javax.swing.JTextField txt_TenKho;
    // End of variables declaration//GEN-END:variables

    private void loadCombobox_NhanVien() {
        NhanVienDAO nvDAO = new NhanVienDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<NhanVien> nvList = nvDAO.selectAll();
        Vector v = new Vector(nvList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_NhanVien.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_NhanVien.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhanVien) value).getHoTenNhanVien());
                }
                return label;
            }
        });
    }

    private void loadCombobox_NhanVien_Search() {
        NhanVienDAO nvDAO = new NhanVienDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<NhanVien> nvList = nvDAO.selectAll();
        Vector v = new Vector(nvList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_Search_NhanVien.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_Search_NhanVien.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhanVien) value).getHoTenNhanVien());
                }
                return label;
            }
        });
    }

    private void loadCombobox_SanPham() {
        SanPhamDAO spDAO = new SanPhamDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<SanPham> spList = spDAO.selectAll();
        Vector v = new Vector(spList);
        //khởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_SanPham.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_SanPham.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((SanPham) value).getTenSanPham());
                }
                return label;
            }
        });
    }

    public boolean soSanh(int row) {
        Integer soKho = (Integer) tab_Kho.getValueAt(row, 0);
        Kho kh = (new KhoDAO()).getKhoByID(soKho);
        String tenKho = txt_TenKho.getText().trim();
        Integer sdt = txt_SDT.getText().trim().equals(kh.getSdt().toString())
                ? Integer.parseInt(txt_SDT.getText().trim()) : (new Random()).nextInt();
        String diaChi = txt_DiaChi.getText().trim();
        String maNV = ((NhanVien) cbb_NhanVien.getSelectedItem()).getMaNhanVien().trim();
        if (kh.getTenKho().equals(tenKho) && kh.getSdt().equals(sdt) && kh.getDiaChi().equals(diaChi)
                && kh.getMaNhanVien().equals(maNV)) {
            return true;
        }
        return false;
    }
}
