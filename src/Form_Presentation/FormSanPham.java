/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form_Presentation;

import DatabaseAccessObject_DAO.ChiTietHoaDonDAO;
import DatabaseAccessObject_DAO.TonKhoDAO;
import DatabaseAccessObject_DAO.LoaiSanPhamDAO;
import DatabaseAccessObject_DAO.NhaCungCapDAO;
import DatabaseAccessObject_DAO.SanPhamDAO;
import Object_BusinessLogic.LoaiSanPham;
import Object_BusinessLogic.NhaCungCap;
import Object_BusinessLogic.SanPham;
import java.awt.Component;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.ListCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FormSanPham extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmNhaCungCap
     */
    public FormSanPham() throws ClassNotFoundException, SQLException {
        initComponents();
        loadDuLieuLenLuoi();
        loadCombobox_NhaCC();
        cbb_NhaCC.setSelectedItem(null);
        loadCombobox_LoaiSP();
        cbb_LoaiSanPham.setSelectedItem(null);
        loadCombobox_NhaCungCap_Search();
        cbb_Search_NhaCC.setSelectedItem(null);
        loadCombobox_LoaiSP_Search();
        cbb_Search_LoaiSP.setSelectedItem(null);

        lbl_DonGia_Hint.setVisible(false);
        lbl_GiaMin_Hint.setVisible(false);
        lbl_GiaMax_Hint.setVisible(false);
    }

    private void loadDuLieuLenLuoi() throws ClassNotFoundException, SQLException {
        //spởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Product ID");
        tableModel.addColumn("Product Name");
        tableModel.addColumn("Product Type ID");
        tableModel.addColumn("Product Type Name");
        tableModel.addColumn("Unit");
        tableModel.addColumn("Unit Price (VNĐ)");
        tableModel.addColumn("Supplier No.");
        tableModel.addColumn("Supplier Name");
        tableModel.addColumn("Origin");
        SanPhamDAO sanPhamDAO = new SanPhamDAO();
        //lấy ra toàn bộ vai trò
        List<SanPham> spList = sanPhamDAO.selectAll();
        for (SanPham sp : spList) {
            Vector vector = new Vector();
            vector.add(sp.getMaSanPham());
            vector.add(sp.getTenSanPham());
            vector.add(sp.getMaLoaiSP());
            vector.add(sp.getTenLoaiSP());
            vector.add(sp.getDonViTinh());
            vector.add((new DecimalFormat("#,###")).format(sp.getDonGia()));
            vector.add(sp.getMaNhaCC());
            vector.add(sp.getTenNhaCC());
            vector.add(sp.getXuatXu());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_SanPham.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_MaSanPham = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        txt_TenSanPham = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbb_NhaCC = new javax.swing.JComboBox();
        txt_DonGia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_XuatXu = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_DonViTinh = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_Search_TenSanPham = new javax.swing.JTextField();
        cbb_Search_NhaCC = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        btn_Search_Clear = new javax.swing.JButton();
        cbb_Search_LoaiSP = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txt_Search_GiaMin = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_Search_GiaMax = new javax.swing.JTextField();
        lbl_GiaMin_Hint = new javax.swing.JLabel();
        lbl_GiaMax_Hint = new javax.swing.JLabel();
        lbl_DonGia_Hint = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cbb_LoaiSanPham = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_SanPham = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        btn_ListKH = new javax.swing.JButton();
        btn_refresh_cbb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Product ID*");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 32, 110, 17);

        txt_MaSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_MaSanPham);
        txt_MaSanPham.setBounds(170, 27, 309, 30);

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btnSua.setText("Update");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(369, 350, 120, 43);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Packet-add-icon.png"))); // NOI18N
        btnThem.setText("Add");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(209, 350, 120, 43);

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/trash-icon.png"))); // NOI18N
        btnXoa.setText("Delete");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(528, 350, 120, 43);

        btnXoaTrang.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btnXoaTrang.setText("Clear");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoaTrang);
        btnXoaTrang.setBounds(688, 350, 120, 43);

        txt_TenSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_TenSanPham);
        txt_TenSanPham.setBounds(170, 80, 309, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Product Name*");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 90, 110, 17);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Supplier*");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(510, 90, 123, 17);

        cbb_NhaCC.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_NhaCC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbb_NhaCC);
        cbb_NhaCC.setBounds(640, 83, 161, 32);

        txt_DonGia.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_DonGia);
        txt_DonGia.setBounds(170, 200, 250, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Unit Price*");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 210, 110, 17);

        txt_XuatXu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_XuatXu);
        txt_XuatXu.setBounds(170, 270, 309, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Origin");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(40, 275, 60, 17);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("  (VNĐ)");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(420, 200, 60, 30);

        txt_DonViTinh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_DonViTinh);
        txt_DonViTinh.setBounds(170, 140, 309, 30);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search"));
        jPanel3.setForeground(new java.awt.Color(0, 204, 0));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Product Name");

        txt_Search_TenSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        cbb_Search_NhaCC.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_Search_NhaCC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setText("Supplier");

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search-b-icon.png"))); // NOI18N
        btnTimKiem.setText("Search");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btn_Search_Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_Search_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btn_Search_Clear.setText("Clear");
        btn_Search_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Search_ClearActionPerformed(evt);
            }
        });

        cbb_Search_LoaiSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_Search_LoaiSP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setText("Product Type");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Unit Price (VNĐ)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("To");

        txt_Search_GiaMin.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("From");

        txt_Search_GiaMax.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        lbl_GiaMin_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_GiaMin_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_GiaMin_Hint.setText("  Invalid!");

        lbl_GiaMax_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_GiaMax_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_GiaMax_Hint.setText("  Invalid!");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17))
                .addGap(77, 77, 77)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_Search_GiaMin, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(txt_Search_GiaMax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_GiaMin_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_GiaMax_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Search_GiaMin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(lbl_GiaMin_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txt_Search_GiaMax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_GiaMax_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12)
                        .addGap(41, 41, 41)
                        .addComponent(txt_Search_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(btnTimKiem)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Search_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 27, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbb_Search_LoaiSP, 0, 255, Short.MAX_VALUE)
                    .addComponent(cbb_Search_NhaCC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel12))
                    .addComponent(txt_Search_TenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cbb_Search_LoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cbb_Search_NhaCC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Search_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(820, 30, 440, 360);

        lbl_DonGia_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_DonGia_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_DonGia_Hint.setText("  Invalid!");
        jPanel1.add(lbl_DonGia_Hint);
        lbl_DonGia_Hint.setBounds(170, 230, 90, 20);

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("(*) required fields");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(40, 360, 113, 26);

        cbb_LoaiSanPham.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbb_LoaiSanPham.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cbb_LoaiSanPham);
        cbb_LoaiSanPham.setBounds(640, 25, 161, 32);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Product Type*");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(510, 32, 123, 17);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Unit*");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(40, 150, 120, 17);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/11111.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(6, 19, 1260, 402);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Product List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        tab_SanPham.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab_SanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_SanPham.getTableHeader().setReorderingAllowed(false);
        tab_SanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_SanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab_SanPham);
        if (tab_SanPham.getColumnModel().getColumnCount() > 0) {
            tab_SanPham.getColumnModel().getColumn(0).setResizable(false);
            tab_SanPham.getColumnModel().getColumn(1).setResizable(false);
            tab_SanPham.getColumnModel().getColumn(2).setResizable(false);
            tab_SanPham.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );

        btn_ListKH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_ListKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-view-calendar-list-icon.png"))); // NOI18N
        btn_ListKH.setText("List");
        btn_ListKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListKHActionPerformed(evt);
            }
        });

        btn_refresh_cbb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btn_refresh_cbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refresh_cbbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_ListKH, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_refresh_cbb, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_ListKH, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(btn_refresh_cbb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab_SanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_SanPhamMouseClicked
        lbl_DonGia_Hint.setVisible(false);
        lbl_GiaMin_Hint.setVisible(false);
        lbl_GiaMax_Hint.setVisible(false);
        int row = tab_SanPham.getSelectedRow();
        String maSP = (String) tab_SanPham.getValueAt(row, 0);
        String tenSP = (String) tab_SanPham.getValueAt(row, 1);
        Integer maLSP = (Integer) tab_SanPham.getValueAt(row, 2);
        String donViTinh = (String) tab_SanPham.getValueAt(row, 4);
        String donGia = (String) (tab_SanPham.getValueAt(row, 5));
        Integer maNhaCC = (Integer) tab_SanPham.getValueAt(row, 6);
        String xuatXu = (String) tab_SanPham.getValueAt(row, 8);
        txt_MaSanPham.setText(maSP);
        txt_TenSanPham.setText(tenSP);
        txt_DonViTinh.setText(donViTinh);
        txt_DonGia.setText(donGia);
        txt_XuatXu.setText(xuatXu);
        NhaCungCapDAO nhaCC_DAO = new NhaCungCapDAO();
        cbb_NhaCC.setSelectedItem(nhaCC_DAO.getNhaCungCapByID(maNhaCC));
        LoaiSanPhamDAO loaiSP_DAO = new LoaiSanPhamDAO();
        cbb_LoaiSanPham.setSelectedItem(loaiSP_DAO.getLoaiSanPhamByID(maLSP));
        txt_MaSanPham.setEnabled(false);
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tab_SanPhamMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        xoaTrang();
        lbl_GiaMin_Hint.setVisible(false);
        lbl_GiaMax_Hint.setVisible(false);
        //spởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Product ID");
        tableModel.addColumn("Product Name");
        tableModel.addColumn("Product Type ID");
        tableModel.addColumn("Product Type Name");
        tableModel.addColumn("Unit");
        tableModel.addColumn("Unit Price (VNĐ)");
        tableModel.addColumn("Supplier No.");
        tableModel.addColumn("Supplier Name");
        tableModel.addColumn("Origin");
        SanPhamDAO sanPhamDAO = new SanPhamDAO();
        //lấy ra thông tin tìm kiếm
        SanPham sp = new SanPham();
        if (txt_Search_TenSanPham.getText().trim().equals("") && cbb_Search_NhaCC.getSelectedItem() == null
                && cbb_Search_LoaiSP.getSelectedItem() == null && txt_Search_GiaMin.getText().trim().equals("")
                && txt_Search_GiaMax.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter information into the search box to search !");
            return;
        }
        Integer giaMax = null;
        Integer giaMin = null;

        if (!txt_Search_GiaMin.getText().trim().equals("")) {
            while (true) {
                try {
                    giaMin = (Integer.parseInt(txt_Search_GiaMin.getText().trim()));
                    lbl_GiaMin_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_GiaMin_Hint.setVisible(true);
                    return;
                }
            }
        }

        if (!txt_Search_GiaMax.getText().trim().equals("")) {
            while (true) {
                try {
                    giaMax = (Integer.parseInt(txt_Search_GiaMax.getText().trim()));
                    lbl_GiaMax_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_GiaMax_Hint.setVisible(true);
                    return;
                }
            }
        }
        sp.setTenSanPham(txt_Search_TenSanPham.getText().trim());
        NhaCungCap ncc = (NhaCungCap) cbb_Search_NhaCC.getSelectedItem();
        sp.setMaNhaCC(ncc != null ? ncc.getMaNhaCC() : null);
        LoaiSanPham lsp = (LoaiSanPham) cbb_Search_LoaiSP.getSelectedItem();
        sp.setMaLoaiSP(lsp != null ? lsp.getMaLoaiSP() : null);
        List<SanPham> sanPhamList = sanPhamDAO.search(sp, giaMax, giaMin);
        for (SanPham sanPham : sanPhamList) {
            Vector vector = new Vector();
            vector.add(sanPham.getMaSanPham());
            vector.add(sanPham.getTenSanPham());
            vector.add(sanPham.getMaLoaiSP());
            vector.add(sanPham.getTenLoaiSP());
            vector.add(sanPham.getDonViTinh());
            vector.add((new DecimalFormat("#,###")).format(sanPham.getDonGia()));
            vector.add(sanPham.getMaNhaCC());
            vector.add(sanPham.getTenNhaCC());
            vector.add(sanPham.getXuatXu());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_SanPham.setModel(tableModel);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        xoaTrang();
        xoaTrangSearch();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tab_SanPham.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one product before deleting !");
            return;
        }
        String maSanPham = (String) tab_SanPham.getValueAt(row, 0);
        if ((new TonKhoDAO()).getListMaSanPham().contains(maSanPham.trim())
                || (new ChiTietHoaDonDAO()).getListMaSanPham().contains(maSanPham.trim())) {
            JOptionPane.showMessageDialog(this, "Unable to remove this product information\n"
                    + "Product information is being used!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete??", "Warning", OK_CANCEL_OPTION);
        //Nếu chọn Yes
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                SanPhamDAO sanPhamDAO = new SanPhamDAO();
                SanPham sp = new SanPham(maSanPham);
                sanPhamDAO.delete(sp);
                xoaTrang();
                xoaTrangSearch();
                loadDuLieuLenLuoi();
                JOptionPane.showMessageDialog(this, "Product information removed !");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        lbl_DonGia_Hint.setVisible(false);
        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_MaSanPham.getText().isEmpty() || txt_TenSanPham.getText().isEmpty() || txt_DonViTinh.getText().isEmpty()
                    || txt_DonGia.getText().isEmpty() || cbb_NhaCC.getSelectedItem() == null || cbb_LoaiSanPham.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                return;
            }

            while (true) {
                try {
                    Integer.parseInt(txt_DonGia.getText().trim());
                    lbl_DonGia_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_DonGia_Hint.setVisible(true);
                    return;
                }
            }

            SanPhamDAO sanPhamDAO = new SanPhamDAO();
            if (sanPhamDAO.getListMaSanPham().contains(txt_MaSanPham.getText().trim().toUpperCase())) {
                JOptionPane.showMessageDialog(this, "Product ID already exists!\n"
                        + "Re-Enter the product ID!!");
                txt_MaSanPham.setText("");
                return;
            }
            //lấy giá trị nhập trên form truyền vào đôi tượng
            SanPham sp = new SanPham();
            sp.setMaSanPham(txt_MaSanPham.getText().trim());
            sp.setTenSanPham(txt_TenSanPham.getText());
            sp.setDonViTinh(txt_DonViTinh.getText());
            sp.setDonGia(Integer.parseInt(txt_DonGia.getText()));
            sp.setMaNhaCC(((NhaCungCap) cbb_NhaCC.getSelectedItem()).getMaNhaCC());
            sp.setMaLoaiSP(((LoaiSanPham) cbb_LoaiSanPham.getSelectedItem()).getMaLoaiSP());
            sp.setXuatXu(txt_XuatXu.getText());
            //thực hiện thêm vào DB
            sanPhamDAO.insert(sp);

            //reset form
            xoaTrang();
            //load lại dữ liệu lên lưới
            loadDuLieuLenLuoi();
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Successfully add new products !");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tab_SanPham.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one product before updating!");
            return;
        }
        lbl_DonGia_Hint.setVisible(false);
        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_TenSanPham.getText().isEmpty() || txt_DonViTinh.getText().isEmpty() || txt_DonGia.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                return;
            }
            while (true) {
                try {
                    Integer.parseInt(txt_DonGia.getText().trim().replaceAll(",", ""));
                    lbl_DonGia_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_DonGia_Hint.setVisible(true);
                    return;
                }
            }
            if (soSanh(row)) {
                JOptionPane.showMessageDialog(this, "All of the informations are retainded!!");
                return;
            }
            SanPhamDAO sanPhamDAO = new SanPhamDAO();
            //lấy giá trị nhập trên form truyền vào đôi tượng
            SanPham sanPham = new SanPham();
            sanPham.setMaSanPham(txt_MaSanPham.getText().trim());
            sanPham.setTenSanPham(txt_TenSanPham.getText());
            sanPham.setDonGia(Integer.parseInt(txt_DonGia.getText().replaceAll(",", "")));
            sanPham.setDonViTinh(txt_DonViTinh.getText());
            sanPham.setMaNhaCC(((NhaCungCap) cbb_NhaCC.getSelectedItem()).getMaNhaCC());
            sanPham.setMaLoaiSP(((LoaiSanPham) cbb_LoaiSanPham.getSelectedItem()).getMaLoaiSP());
            sanPham.setXuatXu(txt_XuatXu.getText());
            //thực hiện thêm vào DB
            sanPhamDAO.update(sanPham);
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Product information updated successfully !");
            //reset form
            xoaTrang();
            xoaTrangSearch();
            //load lại dữ liệu lên lưới
            loadDuLieuLenLuoi();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btn_Search_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Search_ClearActionPerformed
        // TODO add your handling code here:
        txt_Search_TenSanPham.setText("");
        txt_Search_GiaMax.setText("");
        txt_Search_GiaMin.setText("");
        cbb_Search_NhaCC.setSelectedItem(null);
        cbb_Search_LoaiSP.setSelectedItem(null);
        lbl_GiaMin_Hint.setVisible(false);
        lbl_GiaMax_Hint.setVisible(false);
    }//GEN-LAST:event_btn_Search_ClearActionPerformed

    private void btn_ListKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListKHActionPerformed
        try {
            // TODO add your handling code here:
            loadDuLieuLenLuoi();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ListKHActionPerformed

    private void btn_refresh_cbbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refresh_cbbActionPerformed
        // TODO add your handling code here:
        Object obj1 = cbb_LoaiSanPham.getSelectedItem();
        Object obj2 = cbb_NhaCC.getSelectedItem();
        Object obj3 = cbb_Search_LoaiSP.getSelectedItem();
        Object obj4 = cbb_Search_NhaCC.getSelectedItem();
        loadCombobox_LoaiSP();
        loadCombobox_LoaiSP_Search();
        loadCombobox_NhaCC();
        loadCombobox_NhaCungCap_Search();
        cbb_LoaiSanPham.setSelectedItem(obj1);
        cbb_NhaCC.setSelectedItem(obj2);
        cbb_Search_LoaiSP.setSelectedItem(obj3);
        cbb_Search_NhaCC.setSelectedItem(obj4);
    }//GEN-LAST:event_btn_refresh_cbbActionPerformed

    private void xoaTrang() {
        txt_MaSanPham.setText("");
        txt_MaSanPham.setEnabled(true);
        txt_TenSanPham.setText("");
        cbb_NhaCC.setSelectedItem(null);
        cbb_LoaiSanPham.setSelectedItem(null);
        txt_DonGia.setText("");
        txt_XuatXu.setText("");
        txt_DonViTinh.setText("");
        btnThem.setEnabled(true);
        tab_SanPham.clearSelection();
        lbl_DonGia_Hint.setVisible(false);
    }

    private void xoaTrangSearch() {
        txt_Search_GiaMax.setText("");
        txt_Search_GiaMin.setText("");
        txt_Search_TenSanPham.setText("");
        cbb_Search_LoaiSP.setSelectedItem(null);
        cbb_Search_NhaCC.setSelectedItem(null);
        lbl_GiaMax_Hint.setVisible(false);
        lbl_GiaMin_Hint.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormSanPham().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FormSanPham.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btn_ListKH;
    private javax.swing.JButton btn_Search_Clear;
    private javax.swing.JButton btn_refresh_cbb;
    private javax.swing.JComboBox cbb_LoaiSanPham;
    private javax.swing.JComboBox cbb_NhaCC;
    private javax.swing.JComboBox cbb_Search_LoaiSP;
    private javax.swing.JComboBox cbb_Search_NhaCC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_DonGia_Hint;
    private javax.swing.JLabel lbl_GiaMax_Hint;
    private javax.swing.JLabel lbl_GiaMin_Hint;
    private javax.swing.JTable tab_SanPham;
    private javax.swing.JTextField txt_DonGia;
    private javax.swing.JTextField txt_DonViTinh;
    private javax.swing.JTextField txt_MaSanPham;
    private javax.swing.JTextField txt_Search_GiaMax;
    private javax.swing.JTextField txt_Search_GiaMin;
    private javax.swing.JTextField txt_Search_TenSanPham;
    private javax.swing.JTextField txt_TenSanPham;
    private javax.swing.JTextField txt_XuatXu;
    // End of variables declaration//GEN-END:variables

    private void loadCombobox_NhaCC() {
        NhaCungCapDAO nhaCungCapDAO = new NhaCungCapDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<NhaCungCap> NccList = nhaCungCapDAO.selectAll();
        Vector v = new Vector(NccList);
        //spởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_NhaCC.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_NhaCC.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhaCungCap) value).getTenNhaCC());
                }
                return label;
            }
        });
    }

    private void loadCombobox_LoaiSP() {
        LoaiSanPhamDAO loaiSP_DAO = new LoaiSanPhamDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<LoaiSanPham> NccList = loaiSP_DAO.selectAll();
        Vector v = new Vector(NccList);
        //spởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_LoaiSanPham.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_LoaiSanPham.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((LoaiSanPham) value).getTenLoaiSP());
                }
                return label;
            }
        });
    }

    private void loadCombobox_NhaCungCap_Search() {
        NhaCungCapDAO nhaCungCapDAO = new NhaCungCapDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<NhaCungCap> NccList = nhaCungCapDAO.selectAll();
        Vector v = new Vector(NccList);
        //spởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_Search_NhaCC.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_Search_NhaCC.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((NhaCungCap) value).getTenNhaCC());
                }
                return label;
            }
        });
    }

    private void loadCombobox_LoaiSP_Search() {
        LoaiSanPhamDAO loaiSP_DAO = new LoaiSanPhamDAO();
        //lấy toàn bộ bảng nhà cung cấp
        List<LoaiSanPham> NccList = loaiSP_DAO.selectAll();
        Vector v = new Vector(NccList);
        //spởi tạo dữ liệu cho combobox
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel(v);
        cbb_Search_LoaiSP.setModel(dcbm);
        //giúp tạo combobox hiển thị tên vai trò
        cbb_Search_LoaiSP.setRenderer(new ListCellRenderer() {
            DefaultListCellRenderer dlcr = new DefaultListCellRenderer();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                // gọi method giống hệt method cần viết, truyền vào tham số y như nguyên
                JLabel label = (JLabel) dlcr.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value != null) {
                    label.setText(((LoaiSanPham) value).getTenLoaiSP());
                }
                return label;
            }
        });
    }

    public boolean soSanh(int row) {
        String maSanPham = (String) tab_SanPham.getValueAt(row, 0);
        SanPham sp = (new SanPhamDAO()).getSanPhamByID(maSanPham);
        String tenSP = txt_TenSanPham.getText().trim();
        Integer donGia = txt_DonGia.getText().trim().replaceAll(",", "").equals(sp.getDonGia().toString())
                ? Integer.parseInt(txt_DonGia.getText().trim().replaceAll(",", "")) : (new Random()).nextInt();
        String xuatXu = txt_XuatXu.getText().trim();
        String donViTinh = txt_DonViTinh.getText().trim();
        Integer maNhaCC = ((NhaCungCap) cbb_NhaCC.getSelectedItem()).getMaNhaCC();
        Integer maLoaiSP = ((LoaiSanPham) cbb_LoaiSanPham.getSelectedItem()).getMaLoaiSP();
        if (sp.getTenSanPham().equals(tenSP) && sp.getDonGia().equals(donGia) && sp.getDonViTinh().equals(donViTinh)
                && sp.getMaNhaCC().equals(maNhaCC) && sp.getXuatXu().equals(xuatXu)
                && sp.getMaLoaiSP().equals(maLoaiSP)) {
            return true;
        }
        return false;
    }
}
