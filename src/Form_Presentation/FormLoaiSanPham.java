/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form_Presentation;

import DatabaseAccessObject_DAO.SanPhamDAO;
import DatabaseAccessObject_DAO.LoaiSanPhamDAO;
import Object_BusinessLogic.LoaiSanPham;
import java.sql.SQLException;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FormLoaiSanPham extends javax.swing.JFrame {

    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form FrmLoaiSanPham
     */
    public FormLoaiSanPham() throws ClassNotFoundException, SQLException {
        initComponents();
        loadDuLieuLenLuoi();
        lbl_MLSP_Search_Hint.setVisible(false);
        lbl_MaLSP_Hint.setVisible(false);
    }

    private void loadDuLieuLenLuoi() throws ClassNotFoundException, SQLException {
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Product Type No.");
        tableModel.addColumn("Product Type Name");
        tableModel.addColumn("Description");
        LoaiSanPhamDAO loaiSanPhamDAO = new LoaiSanPhamDAO();
        //lấy ra toàn bộ vai trò
        List<LoaiSanPham> loaiSanPhamList = loaiSanPhamDAO.selectAll();
        for (LoaiSanPham lsp : loaiSanPhamList) {
            Vector vector = new Vector();
            vector.add(lsp.getMaLoaiSP());
            vector.add(lsp.getTenLoaiSP());
            vector.add(lsp.getMoTa());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_LoaiSanPham.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        txt_Ten_LSP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_Ma_LSP = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_Search_Ma_LSP = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_Search_Ten_LSP = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btn_Search_Clear = new javax.swing.JButton();
        lbl_MLSP_Search_Hint = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbl_MaLSP_Hint = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tar_Mota = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_LoaiSanPham = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        btn_ListKH = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jPanel1.setLayout(null);

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/system-software-update-icon.png"))); // NOI18N
        btnSua.setText("Update");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(369, 350, 120, 43);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Sign-Add-icon.png"))); // NOI18N
        btnThem.setText("Add");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(209, 350, 120, 43);

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/trash-icon.png"))); // NOI18N
        btnXoa.setText("Delete");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(528, 350, 120, 43);

        btnXoaTrang.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btnXoaTrang.setText("Clear");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoaTrang);
        btnXoaTrang.setBounds(688, 350, 120, 43);

        txt_Ten_LSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_Ten_LSP);
        txt_Ten_LSP.setBounds(200, 110, 430, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Product Type Name*");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 110, 150, 17);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Description");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(40, 170, 100, 17);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Product Type No.*");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(40, 50, 150, 17);

        txt_Ma_LSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(txt_Ma_LSP);
        txt_Ma_LSP.setBounds(200, 42, 430, 30);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Search"));
        jPanel3.setForeground(new java.awt.Color(0, 204, 0));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Product Type No.");

        txt_Search_Ma_LSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("Product Type Name");

        txt_Search_Ten_LSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search-b-icon.png"))); // NOI18N
        btnTimKiem.setText("Search");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btn_Search_Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_Search_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-edit-clear-icon.png"))); // NOI18N
        btn_Search_Clear.setText("Clear");
        btn_Search_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Search_ClearActionPerformed(evt);
            }
        });

        lbl_MLSP_Search_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_MLSP_Search_Hint.setForeground(new java.awt.Color(204, 0, 0));
        lbl_MLSP_Search_Hint.setText("  Invalid!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_Search_Ten_LSP)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_MLSP_Search_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txt_Search_Ma_LSP))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(213, Short.MAX_VALUE)
                .addComponent(btnTimKiem)
                .addGap(18, 18, 18)
                .addComponent(btn_Search_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_Search_Ma_LSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_MLSP_Search_Hint, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Search_Ten_LSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Search_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(740, 40, 500, 260);

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("(*) required fields");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(40, 360, 113, 26);

        lbl_MaLSP_Hint.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        lbl_MaLSP_Hint.setForeground(new java.awt.Color(204, 51, 0));
        lbl_MaLSP_Hint.setText("  Invalid!");
        jPanel1.add(lbl_MaLSP_Hint);
        lbl_MaLSP_Hint.setBounds(200, 80, 100, 20);

        tar_Mota.setColumns(20);
        tar_Mota.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tar_Mota.setRows(5);
        jScrollPane2.setViewportView(tar_Mota);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(200, 170, 430, 150);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/11111.jpg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(6, 19, 1260, 402);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Product Type List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        tab_LoaiSanPham.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab_LoaiSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_LoaiSanPham.getTableHeader().setReorderingAllowed(false);
        tab_LoaiSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_LoaiSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab_LoaiSanPham);
        if (tab_LoaiSanPham.getColumnModel().getColumnCount() > 0) {
            tab_LoaiSanPham.getColumnModel().getColumn(0).setResizable(false);
            tab_LoaiSanPham.getColumnModel().getColumn(1).setResizable(false);
            tab_LoaiSanPham.getColumnModel().getColumn(2).setResizable(false);
            tab_LoaiSanPham.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );

        btn_ListKH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_ListKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Actions-view-calendar-list-icon.png"))); // NOI18N
        btn_ListKH.setText("List");
        btn_ListKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_ListKH, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ListKH, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab_LoaiSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_LoaiSanPhamMouseClicked
        lbl_MaLSP_Hint.setVisible(false);
        lbl_MLSP_Search_Hint.setVisible(false);
        txt_Search_Ma_LSP.setText("");
        txt_Search_Ten_LSP.setText("");
        int row = tab_LoaiSanPham.getSelectedRow();
        Integer maLoaiSanPham = (Integer) tab_LoaiSanPham.getValueAt(row, 0);
        String tenNKH = (String) tab_LoaiSanPham.getValueAt(row, 1);
        String moTa = (String) tab_LoaiSanPham.getValueAt(row, 2);
        txt_Ma_LSP.setText(maLoaiSanPham.toString());
        txt_Ten_LSP.setText(tenNKH);
        tar_Mota.setText(moTa);
        txt_Ma_LSP.setEnabled(false);
        btnThem.setEnabled(false);
    }//GEN-LAST:event_tab_LoaiSanPhamMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        xoaTrang();
        //khởi tạo lại model, xóa hết cột cũ dòng cũ đi
        tableModel = new DefaultTableModel();
        //tạo cột
        tableModel.addColumn("Product Type No.");
        tableModel.addColumn("Product Type Name");
        tableModel.addColumn("Description");
        LoaiSanPhamDAO loaiSanPhamDAO = new LoaiSanPhamDAO();
        //lấy ra thông tin tìm kiếm
        LoaiSanPham lsp = new LoaiSanPham();
        if (txt_Search_Ma_LSP.getText().trim().equals("") && txt_Search_Ten_LSP.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter information into the search box!");
            return;
        }
        if (!txt_Search_Ma_LSP.getText().trim().equals("")) {
            while (true) {
                try {
                    Integer.parseInt(txt_Search_Ma_LSP.getText().trim());
                    lbl_MLSP_Search_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_MLSP_Search_Hint.setVisible(true);
                    return;
                }
            }
        }
        if (!txt_Search_Ma_LSP.getText().trim().equals("")) {
            lsp.setMaLoaiSP(Integer.parseInt(txt_Search_Ma_LSP.getText().trim()));
        }
        if (!txt_Search_Ten_LSP.getText().trim().equals("")) {
            lsp.setTenLoaiSP(txt_Search_Ten_LSP.getText().trim());
        }
        List<LoaiSanPham> loaiSanPhamList = loaiSanPhamDAO.search(lsp);
        for (LoaiSanPham lsph : loaiSanPhamList) {
            Vector vector = new Vector();
            vector.add(lsph.getMaLoaiSP());
            vector.add(lsph.getTenLoaiSP());
            vector.add(lsph.getMoTa());
            //tạo hàng
            tableModel.addRow(vector);
        }
        //đưa dữ liệu từ model vào bảng
        tab_LoaiSanPham.setModel(tableModel);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        xoaTrang();
        xoaTrangSearch();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tab_LoaiSanPham.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one Product Type before deleting !");
            return;
        }
        Integer maLoaiSanPham = (Integer) tab_LoaiSanPham.getValueAt(row, 0);
        if ((new SanPhamDAO()).getListMaLoaiSanPham().contains(maLoaiSanPham)) {
            JOptionPane.showMessageDialog(this, "Unable to remove this Product Type information\n"
                    + "Product Type information is being used!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete??", "Warning", OK_CANCEL_OPTION);
        //Nếu chọn Yes
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                LoaiSanPhamDAO loaiSanPhamDAO = new LoaiSanPhamDAO();
                LoaiSanPham lsp = new LoaiSanPham(maLoaiSanPham);
                loaiSanPhamDAO.delete(lsp);
                xoaTrang();
                xoaTrangSearch();
                loadDuLieuLenLuoi();
                JOptionPane.showMessageDialog(this, "Product Type information removed !");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_Ten_LSP.getText().isEmpty() || txt_Ma_LSP.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                lbl_MaLSP_Hint.setVisible(false);
                return;
            }
            while (true) {
                try {
                    Integer.parseInt(txt_Ma_LSP.getText().trim());
                    lbl_MaLSP_Hint.setVisible(false);
                    break;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid!! \n"
                            + "Some fields are not allowed to contain letters or special characters");
                    lbl_MaLSP_Hint.setVisible(true);
                    return;
                }
            }
            LoaiSanPhamDAO loaiSanPhamDAO = new LoaiSanPhamDAO();
            if (loaiSanPhamDAO.getListMaLoaiSanPham().contains(Integer.parseInt(txt_Ma_LSP.getText().trim()))) {
                JOptionPane.showMessageDialog(this, "Product Type already exists!\n"
                        + "Re-Enter the Product Type No.!!");
                txt_Ma_LSP.setText("");
                return;
            }
            //lấy giá trị nhập trên form truyền vào đôi tượng
            LoaiSanPham lsp = new LoaiSanPham();
            lsp.setMaLoaiSP(Integer.parseInt(txt_Ma_LSP.getText().trim()));
            lsp.setTenLoaiSP(txt_Ten_LSP.getText());
            lsp.setMoTa(tar_Mota.getText());
            //thực hiện thêm vào DB
            loaiSanPhamDAO.insert(lsp);

            //reset form
            xoaTrang();
            xoaTrangSearch();
            //load lại dữ liệu lên lưới
            loadDuLieuLenLuoi();
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Successfully add new Product Type !");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tab_LoaiSanPham.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Select one Product Type before updating!");
            return;
        }
        try {
            //kiêm tra các thông tin bắt buộc nhập là quyền và tên vai trò
            if (txt_Ten_LSP.getText().isEmpty() || txt_Ma_LSP.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all required fields(*) in the Information box");
                return;
            }
            if (soSanh(row)) {
                JOptionPane.showMessageDialog(this, "All of the informations are retainded!!");
                return;
            }
            LoaiSanPhamDAO loaiSanPhamDAO = new LoaiSanPhamDAO();
            //lấy giá trị nhập trên form truyền vào đôi tượng
            LoaiSanPham lsp = new LoaiSanPham();
            lsp.setMaLoaiSP(Integer.parseInt(txt_Ma_LSP.getText().trim()));
            lsp.setTenLoaiSP(txt_Ten_LSP.getText());
            lsp.setMoTa(tar_Mota.getText());
            //thực hiện thêm vào DB
            loaiSanPhamDAO.update(lsp);
            //nếu thành công thì thông báo
            JOptionPane.showMessageDialog(this, "Product Type information updated successfully !");
            //reset form
            xoaTrang();
            xoaTrangSearch();
            //load lại dữ liệu lên lưới
            loadDuLieuLenLuoi();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btn_Search_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Search_ClearActionPerformed
        // TODO add your handling code here:
        txt_Search_Ma_LSP.setText("");
        lbl_MLSP_Search_Hint.setVisible(false);
        txt_Search_Ten_LSP.setText("");
    }//GEN-LAST:event_btn_Search_ClearActionPerformed

    private void btn_ListKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListKHActionPerformed
        try {
            // TODO add your handling code here:
            loadDuLieuLenLuoi();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_ListKHActionPerformed

    private void xoaTrang() {
        txt_Ten_LSP.setText("");
        txt_Ma_LSP.setText("");
        txt_Ma_LSP.setEnabled(true);
        tar_Mota.setText("");
        btnThem.setEnabled(true);
        tab_LoaiSanPham.clearSelection();
        lbl_MaLSP_Hint.setVisible(false);
    }
    
    private void xoaTrangSearch() {
        txt_Search_Ma_LSP.setText("");
        lbl_MLSP_Search_Hint.setVisible(false);
        txt_Search_Ten_LSP.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormLoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormLoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormLoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormLoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and dikhlay the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormLoaiSanPham().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FormLoaiSanPham.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btn_ListKH;
    private javax.swing.JButton btn_Search_Clear;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_MLSP_Search_Hint;
    private javax.swing.JLabel lbl_MaLSP_Hint;
    private javax.swing.JTable tab_LoaiSanPham;
    private javax.swing.JTextArea tar_Mota;
    private javax.swing.JTextField txt_Ma_LSP;
    private javax.swing.JTextField txt_Search_Ma_LSP;
    private javax.swing.JTextField txt_Search_Ten_LSP;
    private javax.swing.JTextField txt_Ten_LSP;
    // End of variables declaration//GEN-END:variables

    public boolean soSanh(int row) {
        Integer maLoaiSanPham = (Integer) tab_LoaiSanPham.getValueAt(row, 0);
        LoaiSanPham vt = (new LoaiSanPhamDAO()).getLoaiSanPhamByID(maLoaiSanPham);
        String tenLoaiSanPham = txt_Ten_LSP.getText().trim();
        Integer maVT = Integer.parseInt(txt_Ma_LSP.getText().trim()) == vt.getMaLoaiSP()
                ? Integer.parseInt(txt_Ma_LSP.getText().trim()) : (new Random()).nextInt();
        String moTa = tar_Mota.getText().trim();
        if (vt.getTenLoaiSP().trim().equals(tenLoaiSanPham) && vt.getMaLoaiSP().equals(maVT) && vt.getMoTa().trim().equals(moTa)) {
            return true;
        }
        return false;
    }
}
